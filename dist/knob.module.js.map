{"mappings":"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","sources":["src/knob.js"],"sourcesContent":["/**\n * Copyright (c) 2022 d0st\n * \n * HomePage: https://www.d0st.me\n * \n * MIT License\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport * as BABYLON from \"babylonjs\"\nimport \"babylonjs-serializers\"\n\n/**\n * @typedef {object} KNOB_BODY_OPTIONS\n * @property {number} height\n * @property {number} radius\n * @property {number} [topRadius] when not available is equal to radius\n * @property {number} [bottomRadius] When not available is equal to radius\n * @property {number} [sides]\n * @property {number} [balance] section along the height representative\n *  of the radius. default is 0.5\n */\n\n/**\n * @typedef {object} ONLY_KNOB_BODY\n * @property {number} [smoothing] 0 is linear and 1 is curvy\n * @typedef {KNOB_BODY_OPTIONS & ONLY_KNOB_BODY} KNOB_BODY\n */\n\n/**\n * @typedef {object} KNOB_POINTER\n * @property {number} [height]\n * @property {number} [offset]\n * @property {number} [position]\n * @property {number} [rStart]\n * @property {number} [rEnd]\n * @property {number} [widthStart]\n * @property {number} [widthEnd]\n */\n\n/**\n * @typedef {object} ONLY_KNOB_SLOT\n * @property {number} [balance] same as body options but defaults to one\n * @property {number} [offset]\n * @typedef {KNOB_BODY_OPTIONS & ONLY_KNOB_SLOT} KNOB_SLOT\n */\n\n/**\n * @typedef {object} KNOB_CONFIG\n * @property {KNOB_BODY} body\n * @property {KNOB_POINTER} [pointer]\n * @property {KNOB_SLOT} [screwHole]\n */\n\n/** one per millimeter */\nconst TESELLATION = 1\n\nexport class KNOB {\n\n\t/**\n\t * @param {KNOB_CONFIG} config \n\t * @param {BABYLON.Scene} scene \n\t * @param {boolean} [draftMode] [WIP - NOT IMPLEMENTED] Doesn't combine meshes and doesn't perform CSG.\n\t * Meshes will be transuncent to see through. This is mainly for performance reasons\n\t */\n\tconstructor(config, scene, draftMode) {\n\t\tthis.fillDefaults(config)\n\t\tthis.scene = scene\n\t\tthis.update(config)\n\t}\n\n\t/**\n\t * @param {KNOB_CONFIG} config\n\t */\n\tfillDefaults(config) {\n\t\t/** @type {KNOB_CONFIG} */\n\t\tthis.config = JSON.parse(JSON.stringify(config))\n\n\t\t/**\n\t\t * @param {KNOB_BODY_OPTIONS} bodyConfig \n\t\t */\n\t\tfunction fillDefaultsOnBody(bodyConfig) {\n\t\t\tif (bodyConfig.bottomRadius == undefined)\n\t\t\t\tbodyConfig.bottomRadius = bodyConfig.radius\n\t\t\tif (bodyConfig.topRadius == undefined)\n\t\t\t\tbodyConfig.topRadius = bodyConfig.radius\n\t\t\tif (bodyConfig.sides < 3)\n\t\t\t\tdelete bodyConfig.sides\n\t\t\tif (bodyConfig.balance == undefined)\n\t\t\t\tbodyConfig.balance = 0.5\n\t\t}\n\n\t\tfillDefaultsOnBody(this.config.body)\n\t\tif (\"screwHole\" in this.config) {\n\t\t\tfillDefaultsOnBody(this.config.screwHole)\n\t\t\tif (this.config.screwHole.balance == undefined)\n\t\t\t\tthis.config.screwHole.balance = 1\n\t\t\tif (this.config.screwHole.bottomRadius == undefined)\n\t\t\t\tthis.config.screwHole.bottomRadius = this.config.screwHole.radius\n\t\t}\n\n\t\tif (\"pointer\" in this.config) {\n\t\t\tif (this.config.pointer.offset == undefined)\n\t\t\t\tthis.config.pointer.offset = 0\n\t\t}\n\t}\n\t/**\n\t * @param {KNOB_CONFIG} config\n\t * @param {(keyof KNOB_CONFIG)[]} [partsToUpdate] \n\t */\n\tupdate(config, partsToUpdate) {\n\t\tif (!partsToUpdate || partsToUpdate.length == 0) {\n\t\t\tpartsToUpdate = [\"body\", \"pointer\", \"screwHole\"]\n\t\t}\n\n\t\tif (partsToUpdate.indexOf(\"pointer\") + 1) {\n\t\t\tthis.pointerShape && this.pointerShape.dispose()\n\t\t\tObject.assign(this.config.pointer, config.pointer)\n\t\t\tthis.pointerShape = this._createPointer(this.config.pointer)\n\t\t}\n\n\t\tlet bodyUpdated = false\n\t\tif (partsToUpdate.indexOf(\"body\") + 1) {\n\t\t\tthis.baseShape && this.baseShape.dispose()\n\t\t\tObject.assign(this.config.body, config.body)\n\t\t\tthis.baseShape = this._createBody(config.body)\n\t\t\tbodyUpdated = true\n\t\t}\n\t\tif (partsToUpdate.indexOf(\"screwHole\") + 1) {\n\t\t\tObject.assign(this.config.screwHole, config.screwHole)\n\t\t\tconst tempShape = this._createScrewHole(config.screwHole)\n\t\t\tthis.screwHoleShape && this.screwHoleShape.dispose()\n\t\t\tthis.screwHoleShape = tempShape\n\t\t\tbodyUpdated = true\n\t\t}\n\t\tif (bodyUpdated) {\n\t\t\tif (this.baseShape && this.screwHoleShape) {\n\t\t\t\tthis.bodyShape && this.bodyShape.dispose()\n\t\t\t\tthis.bodyShape = this._performSubstractiveCSG(this.baseShape, this.screwHoleShape, \"combined\")\n\t\t\t} else {\n\t\t\t\tthis.bodyShape = this.baseShape\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Knob is a combination of body, lips and internal stucture\n\t * First create the shape that will make a body\n\t * @param {KNOB_BODY} bodyConfig\n\t * @returns {BABYLON.Mesh}\n\t */\n\t_createBody(bodyConfig) {\n\t\tconst shape = /** @type {BABYLON.Vector3[]} */ ([])\n\t\tif (!bodyConfig.smoothing) {\n\t\t\tshape.push(...this._createLinearShape(bodyConfig))\n\t\t} else {\n\t\t\tconst y1 = bodyConfig.height * bodyConfig.balance\n\t\t\t//bottom Section\n\t\t\tconst startPoint = new BABYLON.Vector3(bodyConfig.bottomRadius, 0, 0)\n\t\t\tconst midPoint = new BABYLON.Vector3(bodyConfig.radius, y1, 0)\n\t\t\tconst endPoint = new BABYLON.Vector3(bodyConfig.topRadius, bodyConfig.height, 0)\n\t\t\tconst phase1 = this._tessellatePath(startPoint, midPoint, bodyConfig.smoothing, true)\n\t\t\tphase1.pop()\n\t\t\tshape.push(new BABYLON.Vector3(0, 0, 0))\n\t\t\tshape.push(...phase1)\n\t\t\tshape.push(...this._tessellatePath(midPoint, endPoint, bodyConfig.smoothing))\n\t\t\tshape.push(new BABYLON.Vector3(0, bodyConfig.height, 0))\n\t\t}\n\t\treturn BABYLON.MeshBuilder.CreateLathe(\"baseShape\", {\n\t\t\tshape: shape,\n\t\t\tradius: 0,\n\t\t\ttessellation: bodyConfig.sides > 2 ? bodyConfig.sides : null,\n\t\t\tclosed: true\n\t\t})\n\t}\n\n\t/**\n\t * @param {KNOB_SLOT} screwHoleConfig \n\t * @returns {BABYLON.Mesh}\n\t */\n\t_createScrewHole(screwHoleConfig) {\n\t\tif (screwHoleConfig && screwHoleConfig.height && screwHoleConfig.bottomRadius) {\n\t\t\tconst mesh = BABYLON.MeshBuilder.CreateLathe(\"screwHoleShape\", {\n\t\t\t\tshape: this._createLinearShape(this.config.screwHole),\n\t\t\t\tradius: 0,\n\t\t\t\ttessellation: this.config.screwHole.sides > 2 ?\n\t\t\t\t\tthis.config.screwHole.sides : null,\n\t\t\t\tclosed: true,\n\t\t\t})\n\t\t\tif (screwHoleConfig.offset)\n\t\t\t\tmesh.rotateAround(new BABYLON.Vector3(0, 0, 0),\n\t\t\t\t\tnew BABYLON.Vector3(0, 1, 0), screwHoleConfig.offset)\n\t\t\treturn mesh\n\t\t}\n\t\treturn null\n\t}\n\n\t/**\n\t * @param {BABYLON.Mesh} a \n\t * @param {BABYLON.Mesh} b\n\t * @param {string} name\n\t * @returns {BABYLON.Mesh}\n\t */\n\t_performSubstractiveCSG(a, b, name) {\n\t\t// Create CSG objects from each mesh\n\t\tconst outerCSG = BABYLON.CSG.FromMesh(a)\n\t\tconst innerCSG = BABYLON.CSG.FromMesh(b)\n\t\tconst pipeCSG = outerCSG.subtract(innerCSG)\n\t\tconst mKnob = pipeCSG.toMesh(name, null, this.scene)\n\t\tthis.scene.removeMesh(a)\n\t\tthis.scene.removeMesh(b)\n\t\tmKnob.convertToFlatShadedMesh()\n\t\treturn mKnob\n\t}\n\n\t/**\n\t * @param {BABYLON.Vector3} startPoint \n\t * @param {BABYLON.Vector3} endPoint \n\t * @param {number} smoothing\n\t * @param {boolean} [opposite]\n\t * @returns {BABYLON.Vector3[]}\n\t */\n\t_tessellatePath(startPoint, endPoint, smoothing, opposite) {\n\t\tconst path = /** @type {BABYLON.Vector3[]} */ ([])\n\t\tconst distance = BABYLON.Vector3.Distance(startPoint, endPoint)\n\t\tconst subDivisions = Math.round(distance * TESELLATION)\n\t\tlet yPos = startPoint.y\n\t\tconst yIncrement = (endPoint.y - startPoint.y) / subDivisions\n\t\tconst xDiff = endPoint.x - startPoint.x\n\t\tlet position = 0\n\t\tconst step = 1 / subDivisions\n\t\tconst factor = 1 + (smoothing * 2)\n\t\tfor (let i = 0; i <= subDivisions; i++) {\n\t\t\tconst point = new BABYLON.Vector3(0, 0, 0)\n\t\t\tlet xPosition = opposite ? 1 - Math.pow(1 - position, factor) : Math.pow(position, factor)\n\t\t\tpoint.x = startPoint.x + (xDiff * xPosition)\n\t\t\tpoint.y = yPos\n\t\t\tyPos += yIncrement\n\t\t\tpath.push(point)\n\t\t\tposition += step\n\t\t}\n\t\treturn path\n\t}\n\n\t/**\n\t * @param {KNOB_BODY_OPTIONS} config \n\t * @returns {BABYLON.Vector3[]}\n\t */\n\t_createLinearShape(config) {\n\t\treturn [\n\t\t\tnew BABYLON.Vector3(0, 0, 0),\n\t\t\tnew BABYLON.Vector3(config.bottomRadius, 0, 0),\n\t\t\tnew BABYLON.Vector3(config.radius, config.height * config.balance, 0),\n\t\t\tnew BABYLON.Vector3(config.topRadius, config.height, 0),\n\t\t\tnew BABYLON.Vector3(0, config.height, 0)\n\t\t]\n\t}\n\n\t/**\n\t * @param {KNOB_POINTER} config \n\t * @returns {BABYLON.Mesh}\n\t */\n\t_createPointer(config) {\n\t\tif (!config || !config.height)\n\t\t\treturn null\n\n\t\t/**\n\t\t * @param {number} angle \n\t\t * @param {number} radius \n\t\t * @returns {BABYLON.Vector3}\n\t\t */\n\t\tfunction getPointAt(angle, radius) {\n\t\t\treturn new BABYLON.Vector3(Math.cos(angle) * radius, Math.sin(angle) * radius, 0)\n\t\t}\n\n\t\tconst p1 = getPointAt(config.offset + config.widthStart / 2, config.rStart)\n\t\tconst p2 = getPointAt(config.offset - config.widthStart / 2, config.rStart)\n\t\tconst p3 = getPointAt(config.offset - config.widthEnd / 2, config.rEnd)\n\t\tconst p4 = getPointAt(config.offset + config.widthEnd / 2, config.rEnd)\n\t\tconst y = (this.config.body.height * config.position) - (config.height / 2)\n\n\t\treturn BABYLON.MeshBuilder.ExtrudeShape(\"knobPointer\", {\n\t\t\tshape: [p1, p2, p3, p4, p1.clone()],\n\t\t\tpath: [\n\t\t\t\tnew BABYLON.Vector3(0, y, 0),\n\t\t\t\tnew BABYLON.Vector3(0, y + config.height, 0)\n\t\t\t],\n\t\t\tclosePath: true,\n\t\t\tcap: BABYLON.Mesh.CAP_ALL\n\t\t})\n\t}\n\n\tdispose() {\n\t\tthis.baseShape.dispose()\n\t\tthis.screwHoleShape && this.screwHoleShape.dispose()\n\t\tthis.bodyShape.dispose()\n\t\tthis.pointerShape && this.pointerShape.dispose()\n\t}\n\n\texportSTL() {\n\t\t//@ts-ignore\n\t\tBABYLON.STLExport.CreateSTL(this.scene.meshes, true, \"knob\", false, false)\n\t}\n}"],"names":[],"version":3,"file":"knob.module.js.map"}